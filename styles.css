body {
  font-family: "IBM Plex Sans", sans-serif;
  padding: 0 50px;
  margin: 0;
}

h3 {
  font-weight: normal;
}

.page-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  min-height: 100vh;
}

.page-content {
  width: 100%;
  max-width: 1200px;
  padding-bottom: 50px;
}

.section-heading {
  font-size: 36px;
  padding-left: 5px;
  margin-bottom: 30px;
  border-bottom: 3px solid black;
  padding-right: 100px;
}

.nav-bar {
  display: flex;
  justify-content: end;
  width: 100%;
}

.nav-section {
  display: flex;
  justify-content: space-around;
  font-weight: normal;
  width: 40%;
}

.nav-item {
  font-size: 24px;
  font-weight: normal;
  text-decoration: none;
  color: black;
}

.article-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 10px;
  width: 100%;
}

.article-card {
  display: flex;
  flex-direction: column;
  align-items: start;
  padding: 20px;
  background-color: #f5f5f5;
  border-radius: 10px;
  cursor: pointer;
}

.article-link {
  text-decoration: none;
  color: black;
}

.article-date {
  font-size: 16px;
  margin-bottom: 3px;
  margin-left: 5px;
  color: rgb(190, 188, 188);
}

.article-description {
  font-size: 18px;
  font-weight: normal;
  margin: 10px;
}

@media screen and (max-width: 899px) {
  .nav-section {
    display: flex;
    justify-content: space-around;
    width: 100%;
  }

  .article-grid {
    display: grid;
    grid-template-columns: 1fr;
    gap: 10px;
    width: 100%;
  }
}

.gallery-container { /* Or whatever the parent container class is */
  display: flex;
  justify-content: center; /* Center the grid container horizontally */
  width: 100%; /* Ensure the container spans the full width */
}

.grid-container {
  display: grid;
  grid-template-columns: repeat(4, 1fr); /* 3 columns with equal width */
  gap: 8px; /* Space between tiles */
  padding: 16px;
  width: 100%; /* Ensure the grid spans the full width of the container */
  box-sizing: border-box; /* Include padding in the container's size */
}

.grid-item {
  justify-content: center; /* Center image horizontally */
  align-items: center; /* Center image vertically */
  max-height: 300px; /* Set a fixed maximum height for all cards */
  background-color: #f9f9f9;
  border: 1px solid #ccc;
  border-radius: 8px;
  overflow: hidden; /* Clip overflowing content */
  cursor: pointer;
  padding: 5px; /* Add consistent padding inside the tile */
  box-sizing: border-box; /* Include padding in the dimensions */
  transition: transform 0.6s cubic-bezier(0.25, 1, 0.5, 1),
              box-shadow 0.6s cubic-bezier(0.25, 1, 0.5, 1); /* Smooth hover effects */
}

.grid-item:hover {
  transform: scale(1.10); /* Slightly increase the size on hover */
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2); /* Add shadow effect on hover */
  z-index: 10;
}

.grid-item img {
  width: 100%; /* Ensure the image spans the full width of the grid item */
  height: 100%; /* Fill the height of the grid item */
  object-fit: cover; /* Ensures the image fills and clips excess content */
  border-radius: 4px; /* Add rounded corners to the image */
}

/* Modal overlay (dark background) */
.modal {
  display: none;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.8);
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

/* Modal content (centered and constrained size) */
.modal-content {
  background: #fff;
  padding: 20px;
  border-radius: 8px;
  text-align: center;
  width: 80%; /* Fixed width (as a percentage of the viewport) */
  max-width: 850px; /* Maximum width for larger screens */
  height: auto; /* Maintain height proportional to content */
  max-height: 80%; /* Ensure modal doesn't exceed viewport height */
  overflow: hidden; /* Prevent content overflow */
  position: relative;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 20px;
}

/* Image inside modal (scaled to fit within the modal) */
.modal-content img {
  max-width: 100%; /* Scale down to fit the modal width */
  max-height: calc(80% - 60px); /* Leave room for padding and description */
  object-fit: fit; /* Ensure the image maintains aspect ratio */
  border-radius: 8px; /* Add slight rounding to the image */
  overflow-y: hidden;
}

/* Modal description (scroll if text overflows) */
.modal-description {
  margin-top: 15px;
  margin-bottom: 0;
  font-size: 16px;
  color: #333;
  max-height: 20%; /* Ensure description doesn't take over the modal */
  text-align: center;
}

/* Arrows */
.arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  font-size: 36px;
  font-weight: bold;
  color: white;
  cursor: pointer;
  user-select: none;
  z-index: 1001;
  transition: transform 0.3s ease, color 0.3s ease;
}

.left-arrow {
  left: calc(50% - 500px);
}

.right-arrow {
  right: calc(50% - 500px);
}

.arrow:hover {
  color: #ccc; /* Change color smoothly */
  transform: translateY(-50%) scale(1.3); /* Grow arrow by 20% on hover */
}

.see-more {
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 48px;
  cursor: pointer;
  user-select: none;
  color: #000;
  transition: transform 0.3s ease, color 0.3s ease;
}

.see-more:hover {
  color: #aaa; /* Change color smoothly */
  transform: scale(1.2); /* Grow arrow by 20% on hover */
}


/* Close button positioned outside the modal content */
.close {
  position: absolute;
  top: calc(50% - 365px); /* Position above the modal with a 15px gap */
  right: calc(50% - 520px); /* Place outside and above */
  font-size: 48px;
  font-weight: bold;
  color: white;
  cursor: pointer;
  border-radius: 50%;
  width: 48px;
  height: 48px;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1001;
  background: transparent; /* Start with no background */
  transition: transform 0.3s ease, color 0.3s ease; /* Smoothly animate size and color */
}

.close:hover {
  color: #ccc; /* Smoothly change text color */
  transform: scale(1.3); /* Grow arrow by 20% on hover */
}